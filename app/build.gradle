apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        productFlavors{
            free{
                applicationId 'com.udacity.gradle.builditbigger.free'
            }
            paid{
                applicationId 'com.udacity.gradle.builditbigger.paid'
            }
        }

        sourceSets {
            free{
                manifest.srcFile 'src/free/AndroidManifest.xml'
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':jokelib')
    compile project(':androidjokelibrary')
    compile 'com.android.support:appcompat-v7:25.1.0'
    freeCompile 'com.google.android.gms:play-services-ads:10.0.1'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile project(path: ':backend', configuration: 'android-endpoints')

}


/**
 * Write a Gradle task that starts the GCE dev server, runs all the Android tests,
 * and shuts down the dev server.
 */

task runServer{
    dependsOn ':backend:appengineRun'
    project(":backend").afterEvaluate { backend ->
        backend.extensions.appengine.daemon = true
    }
    doLast{
        println 'Should bring GAE up running'
    }
}

task runTest{
    mustRunAfter 'runServer'
    dependsOn ':app:connectedAndroidTest'
    finalizedBy ':backend:appengineStop'

    doLast{
        println 'Should be running test and shutdown the server afterwards'
    }
}

task runTestAutomation{
    dependsOn = ['runServer','runTest']
    doLast{
        println 'Test complete'
    }
}